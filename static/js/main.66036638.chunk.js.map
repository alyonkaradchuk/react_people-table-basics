{"version":3,"sources":["components/Loader/pages/HomePage.tsx","components/Loader/pages/PeoplePage.tsx","components/Loader/pages/PageNotFound.tsx","components/CustomNavLink/CustomNavLink.tsx","components/Loader/NavBar/NavBar.tsx","App.tsx","index.tsx"],"names":["HomePage","className","PeoplePage","PageNotFound","CustomNavLink","props","to","title","navLinkProps","isActive","classNames","NavBar","role","App","path","element","replace","createRoot","document","getElementById","render"],"mappings":"6NAAaA,EAAW,kBACtB,oBAAIC,UAAU,QAAd,sBADsB,ECAXC,EAAa,kBACxB,oBAAID,UAAU,QAAd,wBADwB,ECAbE,EAAe,kBAC1B,oBAAIF,UAAU,QAAd,2BAD0B,E,gBCSfG,EAA2B,SAACC,GACvC,IAAQC,EAAcD,EAAdC,GAAIC,EAAUF,EAAVE,MAEZ,OACE,cAAC,IAAD,CACED,GAAIA,EACJL,UAAW,SAACO,GACV,IAAQC,EAAaD,EAAbC,SAER,OAAOC,IAAW,cAAe,CAC/B,8BAA+BD,GAElC,EARH,SAUGF,GAGN,ECxBYI,EAAS,WACpB,OACE,qBACE,UAAQ,MACRV,UAAU,iCACVW,KAAK,aACL,aAAW,kBAJb,SAME,qBAAKX,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,EAAD,CACEK,GAAG,IACHC,MAAM,SAER,cAAC,EAAD,CACED,GAAG,UACHC,MAAM,iBAMjB,ECjBYM,EAAM,kBACjB,sBAAK,UAAQ,MAAb,UACE,cAAC,EAAD,IACA,sBAAMZ,UAAU,UAAhB,SACE,qBAAKA,UAAU,YAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOa,KAAK,IAAIC,QAAS,cAAC,EAAD,MACzB,cAAC,IAAD,CAAOD,KAAK,IAAIC,QAAS,cAAC,EAAD,MACzB,cAAC,IAAD,CAAOD,KAAK,UAAUC,QAAS,cAAC,EAAD,MAC/B,cAAC,IAAD,CAAOD,KAAK,QAAQC,QAAS,cAAC,EAAD,MAC7B,cAAC,IAAD,IACA,cAAC,IAAD,CAAOD,KAAK,QAAQC,QAAS,cAAC,IAAD,CAAUT,GAAG,IAAIU,SAAO,eAX5C,ECCnBC,qBAAWC,SAASC,eAAe,SAChCC,OACC,cAAC,IAAD,UACE,cAAC,EAAD,M","file":"static/js/main.66036638.chunk.js","sourcesContent":["export const HomePage = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","export const PeoplePage = () => (\n  <h1 className=\"title\">People Page</h1>\n);\n","export const PageNotFound = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import classNames from 'classnames';\nimport { FC } from 'react';\nimport { NavLink, To } from 'react-router-dom';\n\ninterface Props {\n  to: To;\n  title: string;\n}\n\nexport const CustomNavLink: FC<Props> = (props) => {\n  const { to, title } = props;\n\n  return (\n    <NavLink\n      to={to}\n      className={(navLinkProps) => {\n        const { isActive } = navLinkProps;\n\n        return classNames('navbar-item', {\n          'has-background-grey-lighter': isActive,\n        });\n      }}\n    >\n      {title}\n    </NavLink>\n  );\n};\n","import { CustomNavLink } from '../../CustomNavLink/CustomNavLink';\n\nexport const NavBar = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <CustomNavLink\n            to=\"/\"\n            title=\"Home\"\n          />\n          <CustomNavLink\n            to=\"/people\"\n            title=\"People\"\n          />\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import './App.scss';\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport { HomePage } from './components/Loader/pages/HomePage';\nimport { PeoplePage } from './components/Loader/pages/PeoplePage';\nimport { PageNotFound } from './components/Loader/pages/PageNotFound';\nimport { NavBar } from './components/Loader/NavBar/NavBar';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <NavBar />\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"*\" element={<PageNotFound />} />\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"/people\" element={<PeoplePage />} />\n          <Route path=\":slug\" element={<PeoplePage />} />\n          <Route />\n          <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}