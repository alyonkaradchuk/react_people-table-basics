{"version":3,"sources":["components/Loader/pages/HomePage.tsx","api.ts","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/PeopleTable/PeopleTable.tsx","components/PeoplePage/PeoplePage.tsx","components/Loader/pages/PageNotFound.tsx","components/CustomNavLink/CustomNavLink.tsx","components/Loader/NavBar/NavBar.tsx","App.tsx","index.tsx"],"names":["HomePage","className","API_URL","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonLink","props","person","isWoman","sex","to","slug","classNames","name","PeopleTable","people","useParams","map","born","died","mother","motherName","father","fatherName","PeoplePage","useState","setPeople","isLoading","setIsLoading","hasError","setHasError","loadPeople","loadedPeople","peopleWithParents","foundFather","find","foundMother","Object","assign","useEffect","hasNoPeople","length","PageNotFound","CustomNavLink","title","navLinkProps","isActive","NavBar","role","App","path","element","index","replace","createRoot","document","getElementById","render"],"mappings":"mPAAaA,EAAW,kBACtB,oBAAIC,UAAU,QAAd,sBADsB,E,6BCGlBC,EAAU,oEAMT,SAASC,IAEd,OANYC,EAMA,IALL,IAAIC,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAASF,EAAxB,KAMvBI,MAAK,kBAAMC,MAAMP,EAAZ,IACLM,MAAK,SAAAE,GAAQ,OAAIA,EAASC,MAAb,IARlB,IAAcP,CASb,C,UCZYQ,EAAS,kBACpB,qBAAKX,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,qBAFG,E,gBCOTY,EAAwB,SAACC,GACpC,IAAQC,EAAWD,EAAXC,OACFC,EAAyB,MAAfD,EAAOE,IAEvB,OACE,cAAC,IAAD,CACEC,GAAE,aAAQH,EAAOI,MACjBlB,UAAWmB,IAAW,CACpB,kBAAmBJ,IAHvB,SAMGD,EAAOM,MAGb,ECbYC,EAAyB,SAACR,GACrC,IAAQS,EAAWT,EAAXS,OAEAJ,EAASK,cAATL,KAER,OACE,wBACE,UAAQ,cACRlB,UAAU,uDAFZ,UAIE,gCACE,+BACE,sCACA,qCACA,sCACA,sCACA,wCACA,6CAIJ,gCACGsB,EAAOE,KAAI,SAAAV,GAAM,eAChB,qBACE,UAAQ,SAERd,UAAWmB,IACT,CAAE,yBAA0BL,EAAOI,OAASA,IAJhD,UAOE,6BACE,cAAC,EAAD,CAAYJ,OAAQA,MAGtB,6BAAKA,EAAOE,MACZ,6BAAKF,EAAOW,OACZ,6BAAKX,EAAOY,OACZ,6BAEIZ,EAAOa,OACH,cAAC,EAAD,CAAYb,OAAQA,EAAOa,SAD/B,UAEIb,EAAOc,kBAFX,QAEyB,MAG7B,6BAEId,EAAOe,OACH,cAAC,EAAD,CAAYf,OAAQA,EAAOe,SAD/B,UAEIf,EAAOgB,kBAFX,QAEyB,QAvBxBhB,EAAOI,KAHE,QAkCzB,EC5DYa,EAAa,WACxB,MAA4BC,mBAAmB,IAA/C,mBAAOV,EAAP,KAAeW,EAAf,KACA,EAAkCD,oBAAS,GAA3C,mBAAOE,EAAP,KAAkBC,EAAlB,KACA,EAAgCH,oBAAS,GAAzC,mBAAOI,EAAP,KAAiBC,EAAjB,KAEMC,EAAU,iDAAG,gHAEfH,GAAa,GAFE,SAIYjC,IAJZ,OAITqC,EAJS,OAMTC,EAAoBD,EAAaf,KAAI,SAACV,GAC1C,IAAM2B,EAAcF,EACjBG,MAAK,SAAAb,GAAM,OAAIA,EAAOT,OAASN,EAAOgB,UAA3B,IACRa,EAAcJ,EACjBG,MAAK,SAAAf,GAAM,OAAIA,EAAOP,OAASN,EAAOc,UAA3B,IAEd,OAAOgB,OAAOC,OACZ/B,EACA,CAAEe,OAAQY,EAAad,OAAQgB,GAElC,IAEDV,EAAUO,GAlBK,gDAoBfH,GAAY,GApBG,yBAsBfF,GAAa,GAtBE,4EAAH,qDA0BhBW,qBAAU,WACRR,GACD,GAAE,IAEH,IAAMS,GAAeb,IAAcZ,EAAO0B,OAE1C,OACE,qCACE,oBAAIhD,UAAU,QAAd,yBACA,qBAAKA,UAAU,QAAf,SACE,sBAAKA,UAAU,sBAAf,UACGkC,GAAa,cAAC,EAAD,IAEbE,GACC,mBAAG,UAAQ,qBAAqBpC,UAAU,kBAA1C,kCAKD+C,GACC,mBAAG,UAAQ,kBAAX,gDAKAb,IAAcE,GACd,cAAC,EAAD,CACEd,OAAQA,WAOrB,ECvEY2B,EAAe,kBAC1B,oBAAIjD,UAAU,QAAd,2BAD0B,ECSfkD,EAA2B,SAACrC,GACvC,IAAQI,EAAcJ,EAAdI,GAAIkC,EAAUtC,EAAVsC,MAEZ,OACE,cAAC,IAAD,CACElC,GAAIA,EACJjB,UAAW,SAACoD,GACV,IAAQC,EAAaD,EAAbC,SAER,OAAOlC,IAAW,cAAe,CAC/B,8BAA+BkC,GAElC,EARH,SAUGF,GAGN,ECxBYG,EAAS,WACpB,OACE,qBACE,UAAQ,MACRtD,UAAU,iCACVuD,KAAK,aACL,aAAW,kBAJb,SAME,qBAAKvD,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,EAAD,CACEiB,GAAG,IACHkC,MAAM,SAER,cAAC,EAAD,CACElC,GAAG,UACHkC,MAAM,iBAMjB,ECjBYK,EAAM,kBACjB,sBAAK,UAAQ,MAAb,UACE,cAAC,EAAD,IACA,sBAAMxD,UAAU,UAAhB,SACE,qBAAKA,UAAU,YAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOyD,KAAK,IAAIC,QAAS,cAAC,EAAD,MACzB,eAAC,IAAD,CAAOD,KAAK,UAAZ,UACE,cAAC,IAAD,CAAOE,OAAK,EAACD,QAAS,cAAC,EAAD,MACtB,cAAC,IAAD,CAAOD,KAAK,QAAQC,QAAS,cAAC,EAAD,SAE/B,cAAC,IAAD,CAAOD,KAAK,QAAQC,QAAS,cAAC,IAAD,CAAUzC,GAAG,IAAI2C,SAAO,MACrD,cAAC,IAAD,CAAOH,KAAK,IAAIC,QAAS,cAAC,EAAD,eAZhB,ECCnBG,qBAAWC,SAASC,eAAe,SAChCC,OACC,cAAC,IAAD,UACE,cAAC,EAAD,M","file":"static/js/main.9c41fed2.chunk.js","sourcesContent":["export const HomePage = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport { FC } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types/Person';\n\ninterface Props {\n  person: Person;\n}\n\nexport const PersonLink: FC<Props> = (props) => {\n  const { person } = props;\n  const isWoman = person.sex === 'f';\n\n  return (\n    <Link\n      to={`../${person.slug}`}\n      className={classNames({\n        'has-text-danger': isWoman,\n      })}\n    >\n      {person.name}\n    </Link>\n  );\n};\n","import classNames from 'classnames';\nimport { FC } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../../types/Person';\nimport { PersonLink } from '../PersonLink/PersonLink';\n\ninterface Props {\n  people: Person[];\n}\n\nexport const PeopleTable: FC<Props> = (props) => {\n  const { people } = props;\n\n  const { slug } = useParams();\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <tr\n            data-cy=\"person\"\n            key={person.slug}\n            className={classNames(\n              { 'has-background-warning': person.slug === slug },\n            )}\n          >\n            <td>\n              <PersonLink person={person} />\n            </td>\n\n            <td>{person.sex}</td>\n            <td>{person.born}</td>\n            <td>{person.died}</td>\n            <td>\n              {\n                person.mother\n                  ? <PersonLink person={person.mother} />\n                  : person.motherName ?? '-'\n              }\n            </td>\n            <td>\n              {\n                person.father\n                  ? <PersonLink person={person.father} />\n                  : person.fatherName ?? '-'\n              }\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { getPeople } from '../../api';\nimport { Person } from '../../types/Person';\nimport { Loader } from '../Loader/Loader';\nimport { PeopleTable } from '../PeopleTable/PeopleTable';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [hasError, setHasError] = useState(false);\n\n  const loadPeople = async () => {\n    try {\n      setIsLoading(true);\n\n      const loadedPeople = await getPeople();\n\n      const peopleWithParents = loadedPeople.map((person) => {\n        const foundFather = loadedPeople\n          .find(father => father.name === person.fatherName);\n        const foundMother = loadedPeople\n          .find(mother => mother.name === person.motherName);\n\n        return Object.assign(\n          person,\n          { father: foundFather, mother: foundMother },\n        );\n      });\n\n      setPeople(peopleWithParents);\n    } catch {\n      setHasError(true);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    loadPeople();\n  }, []);\n\n  const hasNoPeople = !isLoading && !people.length;\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && <Loader />}\n\n          {hasError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {hasNoPeople && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {!isLoading && !hasError && (\n            <PeopleTable\n              people={people}\n            />\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","export const PageNotFound = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import classNames from 'classnames';\nimport { FC } from 'react';\nimport { NavLink, To } from 'react-router-dom';\n\ninterface Props {\n  to: To;\n  title: string;\n}\n\nexport const CustomNavLink: FC<Props> = (props) => {\n  const { to, title } = props;\n\n  return (\n    <NavLink\n      to={to}\n      className={(navLinkProps) => {\n        const { isActive } = navLinkProps;\n\n        return classNames('navbar-item', {\n          'has-background-grey-lighter': isActive,\n        });\n      }}\n    >\n      {title}\n    </NavLink>\n  );\n};\n","import { CustomNavLink } from '../../CustomNavLink/CustomNavLink';\n\nexport const NavBar = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <CustomNavLink\n            to=\"/\"\n            title=\"Home\"\n          />\n          <CustomNavLink\n            to=\"/people\"\n            title=\"People\"\n          />\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import './App.scss';\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport { HomePage } from './components/Loader/pages/HomePage';\nimport { PeoplePage } from './components/PeoplePage/PeoplePage';\nimport { PageNotFound } from './components/Loader/pages/PageNotFound';\nimport { NavBar } from './components/Loader/NavBar/NavBar';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <NavBar />\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"/people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":slug\" element={<PeoplePage />} />\n          </Route>\n          <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"*\" element={<PageNotFound />} />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}